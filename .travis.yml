languages: cpp

os: linux
dist: bionic
cache: ccache

matrix:
  include:
    - name: "GCC CUDA Debug (linux)"
      os: linux
      compiler: gcc
      env:
      - BUILD=Debug
      - USE_CUDA=ON
      - USE_OPENCL=OFF
      - USE_METAL=OFF
    - name: "GCC OpenCL Debug (linux)"
      os: linux
      compiler: gcc
      env:
      - BUILD=Debug
      - USE_CUDA=OFF
      - USE_OPENCL=ON
      - USE_METAL=OFF
    - name: "Clang Metal Debug (osx)"
      os: osx
      env:
      - BUILD=Debug
      - USE_CUDA=OFF
      - USE_OPENCL=OFF
      - USE_METAL=ON
      addons:
        homebrew:
          packages:
            - cmake
          update: true

addons:
  apt:
    update: true
    source:
      # - sourceline: 'ppa:mhier/libboost-latest'
      - ubuntu-toolchain-r-test
    packages:
      - clang-tidy
      - cppcheck


before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      export CMAKE_MAJOR_VERSION=3.17;
      export CMAKE_MINOR_VERSION=2;
      wget -q https://cmake.org/files/v${CMAKE_MAJOR_VERSION}/cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh && mkdir /opt/cmake && sh ./cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh --prefix=/opt/cmake --skip-license && sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake && rm ./cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh && export PATH=/usr/local/bin:$PATH;
      wget https://raw.githubusercontent.com/FLAMEGPU/FLAMEGPU2_dev/master/scripts/actions/install_cuda_ubuntu.sh;
      export cuda=11.0;
      source ./install_cuda_ubuntu.sh;
      sudo apt-get install -y --no-install-suggests --no-install-recommends cuda-${cuda};
      if [[ $? -eq 0 ]]; then
        echo "Adding CUDA to CUDA_PATH, PATH and LD_LIBRARY_PATH";
        export CUDA_PATH=${CUDA_PATH};
        export PATH=${CUDA_PATH}/bin:${PATH};
        LD_LIBRARY_PATH=${CUDA_PATH}/lib:${CUDA_PATH}/lib64:${LD_LIBRARY_PATH};
      fi;
    fi;
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      choco upgrade cmake -y --version=3.17.2;
      choco install cuda -y --version=11.0.3;
    fi;

script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${BUILD} -DGPGPU_USE_CUDA=${USE_CUDA} -DGPGPU_USE_OPENCL=${USE_OPENCL} -DGPGPU_USE_METAL=${USE_METAL} ..
  - cmake --build .
  - ./test_gpgpu

notifications:
  email:
    on_failure: change
    on_succes: never
